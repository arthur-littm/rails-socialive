<h2> SUBSCRIBER PAGE </h2>

    <div id="video-container">
      <video id="red5pro-subscriber-video" width="600" height="300" controls autoplay>
      </video>
    </div>

    <%  javascript_include_tag "https://webrtc.github.io/adapter/adapter-latest.js"%>
    <%  javascript_include_tag "red5pro/red5pro-sdk.min.js"%>
    <%  javascript_include_tag "videojs/video.min.js"%>
    <%  javascript_include_tag "videojs/videojs-media-sources.min.js"%>
    <%  javascript_include_tag "videojs/videojs.hls.min.js"%>

    <% content_for :after_js do %>
       <script>
      // Create a new instance of the WebRTC subcriber.
            var subscriber = new red5prosdk.RTCSubscriber();

            // Create a view instance based on video element id.
            var viewer = new red5prosdk.PlaybackView('red5pro-subscriber-video');
            // Attach the subscriber to the view.
            viewer.attachSubscriber(subscriber);

            var protocol = window.location.protocol;
              var isSecure = protocol.charAt(protocol.length - 2);

              // Using Chrome/Google TURN/STUN servers.
              var iceServers = [{urls: 'stun:stun2.l.google.com:19302'}];

              // Initialize
              subscriber.init({
                  protocol: 'ws',
                  host: 'localhost',
                  port: 8081,
                  app: 'live',
                  streamName: 'stream1',
                  iceServers: iceServers,
                  subscriptionId: 'subscriber-' + Math.floor(Math.random() * 0x10000).toString(16),
                })
                .then(function() {
                  // Invoke the playback action
                  return subscriber.play();
                })
                .catch(function(error) {
                  // A fault occurred while trying to initialize and subscribe to the stream.
                  console.error(error);
                });

    </script>
    <% end %>
